env:
  DOCKER_USER: "11744711"
  DOCKER_REPOSITORY_NAME: "temp_for_hackaton"
  PROJECT_NAME: "scb_hack"
  STAGE: "dev"
  VERSION: "ver-${{ github.sha }}"
  V: "1.0"
  CHAT_ID: "-1001730476295"
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  create_docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u $DOCKER_USER --password-stdin
      - name: Docker build
        run: |
          docker build ./scb-backend -t ${{ env.PROJECT_NAME }}:${{ env.VERSION }}
      - name: Docker tagging
        run: |
          docker tag ${{ env.PROJECT_NAME }}:${{ env.VERSION}} ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.PROJECT_NAME}}-${{ env.V }}
      - name: Docker push
        run: |
          docker push ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.PROJECT_NAME}}-${{ env.V }}
          curl \
            --header 'Content-Type: application/json' \
            --request 'POST' \
            --data '{"chat_id":"${{ env.CHAT_ID }}","text":"Job <<creat_docker_build>> completed"}' \
            "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage"
  deploy:
    runs-on: ubuntu-latest
    needs: [create_docker_build]
    env:
      WORK_DIR: "/home/${{ secrets.USERNAME }}/deploy/sovcombank_hakaton/"
    steps:
      - name: Git clone
        uses: actions/checkout@v2
      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ env.WORK_DIR }}
            git checkout dev
            docker-compose -f docker-compose.dev.yml down
            git stash clear
            git stash -m "удали эту хрень"
            git pull
            docker container rm ${{ env.PROJECT_NAME }}-nginx
            docker container rm ${{ env.PROJECT_NAME }}-backend
            docker container rm ${{ env.PROJECT_NAME }}-postgres
            docker rmi ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.PROJECT_NAME}}-${{ env.V }} -f
            docker-compose -f docker-compose.dev.yml up --force-recreate -d
            curl \
              --header 'Content-Type: application/json' \
              --request 'POST' --data '{"chat_id":"${{ env.CHAT_ID }}","text":"Job <<deploy>> completed"}' \
              "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage"
